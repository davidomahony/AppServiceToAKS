name: Deploy App Service 

on: workflow_dispatch


env:
  AZURE_WEBAPP_NAME: as-movie-demo   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: './src/AppServiceToAKS/'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0'           # set this to the dot net version to use

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repo
      - uses: actions/checkout@main
      
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          pushd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o './myapp' 
          popd

      - name: Update App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: '${{ env.AZURE_WEBAPP_NAME }}'
          mask-inputs: false
          app-settings-json: '[{ "name": "omdbAppKey", "value": "${{ secrets.OMDB_APP_KEY }}", "slotSetting": false }]'
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_MOVIE_DEMO  }} # Define secret variable in repository settings as per action documentation
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}myapp'

# env:
#   AZURE_WEBAPP_NAME: as-movie-demo
#   AZURE_WEBAPP_PACKAGE_PATH: '.' 

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Setup .NET
#       uses: actions/setup-dotnet@v3
#       with:
#         dotnet-version: "6.0"
#     - name: Restore dependencies
#       run: dotnet restore

#     - name: Display structure of downloaded files
#       run: ls -R
#       working-directory: './'

#     #- name: Building App
#     #   run: dotnet build --no-restore
#     # - name: Unit Tests
#     #   run: dotnet test --no-build --verbosity normal --filter 'FullyQualifiedName!~IntegrationTests'
#     # - name: Publish
#     #   run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/publish/${{ env.AZURE_WEBAPP_NAME }}'
#     - name: Build with dotnet
#       run: dotnet build Movie.API.sln --configuration Release

#     - name: dotnet publish
#       run: dotnet publish ./src/AppServiceToAKS/Movie.API.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp

#     - name: Upload Artefacts
#       uses: actions/upload-artifact@v3
#       with:
#         name: '${{ env.AZURE_WEBAPP_NAME }}-${{ github.run_id }}'
#         path: ${{env.DOTNET_ROOT}}/myapp

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Fetch Artifacts
#       uses: actions/download-artifact@v3
#       with:
#         name: '${{ env.AZURE_WEBAPP_NAME }}-${{ github.run_id }}'

#     - name: Deploy Application
#       uses: azure/webapps-deploy@v2
#       with: 
#         app-name: ${{ env.AZURE_WEBAPP_NAME }}
#         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_MOVIE_DEMO  }} 
#         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}