name: Deploy App Service 

on: workflow_dispatch

env:
  AZURE_WEBAPP_NAME: as-movie-demo   
  AZURE_WEBAPP_PACKAGE_PATH: './src/AppServiceToAKS/' 
  DOTNET_VERSION: '6.0'    

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@main
      
      - name: Set up Correct Version
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      - name: Restore, Build & Publish app
        run: |
          pushd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o './myapp' 
          popd

      - name: Run Unit & Service Tests
        run: |
          dotnet test './test/Movie.API.UnitTests/Movie.API.UnitTests.csproj'
          dotnet test './test/Movie.API.ServiceTests/Movie.API.ServiceTests.csproj'

      - name: Upload Artefacts
        uses: actions/upload-artifact@v3
        with:
          name: '${{ env.AZURE_WEBAPP_NAME }}-${{ github.run_id }}-build'
          path: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}myapp'          

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout action
      uses: actions/checkout@v3

    - name: Fetch Artifacts
      uses: actions/download-artifact@v3
      with:
        name: '${{ env.AZURE_WEBAPP_NAME }}-${{ github.run_id }}-build'

    - name: Azure Cli Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Update App Settings
      uses: azure/appservice-settings@v1
      with:
        app-name: '${{ env.AZURE_WEBAPP_NAME }}'
        mask-inputs: false
        app-settings-json: '[{ "name": "omdbAppKey", "value": "${{ secrets.OMDB_APP_KEY }}", "slotSetting": false }]'
        
    - name: Run Azure webapp deploy action using publish profile credentials
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_MOVIE_DEMO  }} 
        package: './'

  test:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@main
      
      - name: Set up Correct Version
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 

      - name: Run Smoke Tests
        run: |
          dotnet test './test/Movie.API.SmokeTests/Movie.API.SmokeTests.csproj'